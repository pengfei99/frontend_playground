#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default system properties included when running spark-submit.
# This is useful for setting default environmental settings.

# Example:
# spark.master                     spark://master:7077
# spark.eventLog.enabled           true
# spark.eventLog.dir               hdfs://namenode:8021/directory
# spark.serializer                 org.apache.spark.serializer.KryoSerializer
# spark.driver.memory              5g
# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers="one two three"
# spark.master yarn
# spark.authenticate true
# spark.authenticate.enableSaslEncryption true
# spark.network.crypto.enabled true
spark.hadoop.fs.defaultFS hdfs://spark-m01.casdds.casd:8020
spark.yarn.access.hadoopFileSystems hdfs://spark-m01.casdds.casd:8020
spark.hadoop.hadoop.security.authentication kerberos
spark.hadoop.hadoop.security.authorization true
spark.hadoop.hadoop.security.auth_to_local RULE:[1:$1@$0](.*@CASDDS\.CASD)s/@CASDDS.CASD//

# Activer la délégation de tickets Kerberos
spark.yarn.security.credentials.hadoopfs.enabled=true
spark.yarn.security.tokens.hadoopfs.enabled=true

# Héritage des groupes/rôles via Hadoop
spark.hadoop.hadoop.security.group.mapping.ldap.bind.user=ldap-user
spark.hadoop.hadoop.security.group.mapping=org.apache.hadoop.security.LdapGroupsMapping
# Configuration Kerberos
# spark.kerberos.keytab /etc/spark.keytab
# spark.kerberos.principal spark/spark-m01.casdds.casd@CASDDS.CASD

# Intégration HDFS sécurisé
spark.hadoop.fs.defaultFS hdfs://spark-m01.casdds.casd:8020
spark.hadoop.hadoop.security.authentication kerberos
spark.hadoop.hadoop.security.authorization true
spark.hadoop.dfs.encrypt.data.transfer true
spark.hadoop.dfs.data.transfer.protection authentication

spark.yarn.security.credentials.hadoopfs.enabled=true
spark.yarn.security.tokens.hadoopfs.enabled=true
spark.hadoop.hadoop.security.group.mapping.ldap.bind.user=ldap-user

spark.hadoop.hadoop.security.group.mapping=org.apache.hadoop.security.LdapGroupsMapping

# Configuration SSL/TLS pour HDFS
#spark.hadoop.ssl.server.truststore.location /opt/hadoop/etc/hadoop/truststore.jks
#spark.hadoop.ssl.server.truststore.password changeit
#spark.hadoop.ssl.client.truststore.location /opt/hadoop/etc/hadoop/truststore.jks
#spark.hadoop.ssl.client.truststore.password changeit

# Configuration YARN sécurisé
spark.yarn.principal yarn/spark-m01.casdds.casd@CASDDS.CASD
spark.yarn.keytab /etc/krb5.keytab
spark.yarn.security.credentials.hadoop.enabled true






